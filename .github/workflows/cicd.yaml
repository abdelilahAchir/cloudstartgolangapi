name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Go
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23.5

      # Install dependencies
      - name: Install dependencies
        run: go mod tidy

      # Run tests
      - name: Run tests
        run: go test -v ./...

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and push Docker image
      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/cloudstartgolangapi:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/cloudstartgolangapi:latest
          docker build -f ./Dockerfile.mysql-backup -t ${{ secrets.DOCKER_USERNAME }}/mysql-backup-awscli:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/mysql-backup-awscli:latest

      # Set up kubeconfig for Linode
      - name: Set up kubeconfig
        run: |
          echo "${{ secrets.LINODE_KUBECONFIG_BASE64 }}" | base64 -d > kubeconfig
          export KUBECONFIG=$PWD/kubeconfig
          kubectl get nodes # Test the connection to the cluster
      # Deploy to Kubernetes
      - name: Deploy to Kubernetes
        env:
          DATABASE_USER: ${{ secrets.DATABASE_USER }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
          DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
          DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
        run: |
          export KUBECONFIG=$PWD/kubeconfig
           kubectl apply -f k8s/namespace.yaml
           kubectl apply -f k8s/mysql-pvc.yaml
           kubectl apply -f k8s/mysql-backup-pvc.yaml
           kubectl apply -f k8s/mysql-secret.yaml
           kubectl apply -f k8s/BackblazeS3credentials.yaml
           kubectl apply -f k8s/mysql-deployment.yaml
           kubectl apply -f k8s/mysql-service.yaml
           kubectl apply -f k8s/go-app-service.yaml
           kubectl apply -f k8s/go-app-ingress.yaml
           kubectl apply -f k8s/mysql-backup-cronjob.yaml
           kubectl apply -f k8s/go-app-deployment.yaml
